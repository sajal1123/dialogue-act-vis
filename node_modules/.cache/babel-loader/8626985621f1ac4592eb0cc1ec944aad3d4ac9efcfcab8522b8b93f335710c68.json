{"ast":null,"code":"import React,{useEffect,useRef}from'react';import*as d3 from'd3';import'd3-selection';import DaNames from'../../data/DaNames';import jsonData from\"../../data/Conv11103.json\";import EDAs from'../../data/daMap';import actNum from'../../data/daLabelsDict';import{jsx as _jsx}from\"react/jsx-runtime\";const EmotionSequence=()=>{let conversation=jsonData;const data=jsonData['0']['Table 1'];const daLabels=data.map(row=>[EDAs[actNum[row['act']-1]],actNum[row['act']-1]]);let words=countNumbers(daLabels);const svgRef=useRef(null);console.log(\"conversacionUno\");console.log(conversation[0]['Table 1']);//pd\nconst conversacionUno=conversation[0]['Table 1'];const conversacionDos=[];//emoNum = {‘anger’: 0, ‘disgust’: 1, ‘fear’: 2, ‘joy’: 3, ‘neutral’: 4, ‘sadness’: 5, ‘surprise’: 6}\nuseEffect(()=>{const svg=d3.select(svgRef.current);const width=200;const height=320;const radiusScale=d3.scaleSqrt().domain([0,1]).range([0,30]);const padding=1;console.log(\"initial conversacionDos\");console.log(conversacionDos);const numbers=[];//pd\n//add an index number to data\nfor(var i=0;i<conversacionUno.length;i++){console.log(conversacionUno.length);console.log(i);console.log(conversacionUno[i].index);console.log(conversacionUno[i].topic);conversacionUno[i][\"index\"]=i;console.log(\"this is index\");console.log(conversacionUno[i].index);}console.log(numbers);console.log(\"conversacionUno\");console.log(conversacionUno);console.log(\"conversacionUno length\");console.log(conversacionUno.length);for(var i=0;i<conversacionUno.length;i++){conversacionDos.pop();}console.log(\"conversacionDos\");console.log(conversacionDos);const margin={left:30,top:10,right:3,bottom:20};const xScale=d3.scaleLinear().range([margin.left,width-margin.right]).domain(d3.extent(conversacionUno.map(d=>d.index)));svg.selectAll('g').remove();svg.append('g').call(d3.axisBottom(xScale)).attr('transform',\"translate(\".concat(2*margin.left,\",\").concat(height-3*margin.bottom,\")\"));function getColorDot(d){if(d.DApredict===d.act){return'SteelBlue';}return'red';}//   function getColorLine(d){\n//     console.log(\"topic\")\n//     console.log(d)\n//     if (d.topic===100) {\n//       return 'orange'\n//     }\n//     if (d.topic===101) {\n//       return 'green'\n//     }\n//     if (d.topic===102) {\n//       return 'SteelBlue'\n//     }\n//     if (d.topic===103) {\n//       return 'red'\n//     }\n//     if (d.topic===104) {\n//       return 'yellow'\n//     }\n//     if (d.topic===105) {\n//       return 'brown'\n//     }\n//     if (d.topic===106) {\n//       return 'black'\n//     }\n//     return 'red'\n// }\nconst yScale=d3.scaleLinear().range([height-5*margin.bottom,5*margin.top]).domain(d3.extent(conversacionUno.map(d=>d.topic)));svg.append('g').call(d3.axisLeft(yScale)).attr('transform',\"translate(\".concat(2*margin.left,\",0)\"));svg.selectAll('circle').data(conversacionUno).enter().append('circle').attr('cx',d=>xScale(d.index)).attr('cy',d=>yScale(d.topic))//.attr('cy', d => d.topic)\n.attr('r',4).style('fill',d=>getColorDot(d))//.attr('stroke-width','.05')\n//.attr('stroke','black')\n//.attr('stroke-opacity','10')\n.attr('transform',\"translate(\".concat(2*margin.left,\",0)\"));const lineSeq=d3.line().x(d=>xScale(d.index)).y(d=>yScale(d.topic)).curve(d3.curveStepAfter);//.attr('stroke',d => getColorDot(d))\nsvg.append('g').selectAll('path').data([conversacionUno]).enter().append('path').attr('transform',\"translate(\".concat(2*margin.left,\",0)\")).attr('d',d=>lineSeq(d)).attr('fill','none')//these do what?\n//.attr(\"stroke-linejoin\", \"round\")\n//.attr(\"stroke-linecap\", \"round\")\n.attr('stroke','orange');// 'black')\n//.style('fill', d => getColorDot(d))\nsvg.append('text').attr('text-anchor','middle').attr('x',width/2).attr('y',height).text('Utterance # within Conversation');svg.append('text').attr('text-anchor','middle').attr('transform','rotate(-90)').attr('x',-height/2+25).attr('y',20).text('Emotions');svg.append('text').attr('text-anchor','middle')//.attr('transform', 'rotate(-90)')\n.attr('x',width).attr('y',15).attr('fill','red').attr('stroke-width','.01').attr('stroke','black').text('DA PREDICTION ERROR');svg.append('text').attr('text-anchor','middle')//.attr('transform', 'rotate(-90)')\n.attr('x',width+11).attr('y',40).attr('fill','SteelBlue').attr('stroke-width','.01').attr('stroke','black').text('DA PREDICTION CORRECT');svg.selectAll('.legendRect').append('rect').attr('class','legendRect').attr('fill','red').attr('transform',\"translate(\".concat(2*margin.left,\",\").concat(height-2*margin.bottom,\")\"));//pd\n},[words],[conversation]);return/*#__PURE__*/_jsx(\"svg\",{ref:svgRef,width:\"100%\",height:'100%',style:{'paddingLeft':'2%'}});};export default EmotionSequence;function countNumbers(numbers){const countDict={};// Create an empty dictionary\nfor(const number of numbers){// console.log(\"NUMBER\", number);\nif(countDict[number[0]]==undefined){countDict[number[0]]=[1,number[1]];// If the number is not in the dictionary, initialize the count to 1\n}else{countDict[number[0]][0]+=1;// If the number is already in the dictionary, increment the count\n}}return countDict;}","map":{"version":3,"names":["React","useEffect","useRef","d3","DaNames","jsonData","EDAs","actNum","jsx","_jsx","EmotionSequence","conversation","data","daLabels","map","row","words","countNumbers","svgRef","console","log","conversacionUno","conversacionDos","svg","select","current","width","height","radiusScale","scaleSqrt","domain","range","padding","numbers","i","length","index","topic","pop","margin","left","top","right","bottom","xScale","scaleLinear","extent","d","selectAll","remove","append","call","axisBottom","attr","concat","getColorDot","DApredict","act","yScale","axisLeft","enter","style","lineSeq","line","x","y","curve","curveStepAfter","text","ref","countDict","number","undefined"],"sources":["/Users/sajalchandra/Desktop/UIC/UIC Sem 3/CS 529/Final Project Deployment/dialogue-act-vis/src/components/visualizations/EmotionSequence.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport 'd3-selection';\nimport DaNames from '../../data/DaNames';\nimport jsonData from \"../../data/Conv11103.json\"\nimport EDAs from '../../data/daMap';\nimport actNum from '../../data/daLabelsDict';\n\n\nconst EmotionSequence = () => {\n  let conversation = jsonData;\n  const data = jsonData['0']['Table 1'];\n  const daLabels = data.map(row => ([EDAs[actNum[row['act'] - 1]], actNum[row['act'] - 1]]));\n  let words = countNumbers(daLabels);\n  const svgRef = useRef(null);\n  console.log(\"conversacionUno\")\n  console.log(conversation[0]['Table 1'])//pd\n  const conversacionUno = conversation[0]['Table 1']\n  const conversacionDos = []\n  //emoNum = {‘anger’: 0, ‘disgust’: 1, ‘fear’: 2, ‘joy’: 3, ‘neutral’: 4, ‘sadness’: 5, ‘surprise’: 6}\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const width = 200;\n    const height = 320;\n    const radiusScale = d3.scaleSqrt().domain([0, 1]).range([0, 30]);\n    const padding = 1;\n\n    console.log(\"initial conversacionDos\")\n    console.log(conversacionDos)\n    const numbers=[]\n\n    //pd\n    //add an index number to data\n    for (var i=0;i<conversacionUno.length; i++ ) {\n      console.log(conversacionUno.length)\n      console.log(i)\n      console.log(conversacionUno[i].index)\n      console.log(conversacionUno[i].topic)\n      \n      conversacionUno[i][\"index\"]=i\n      \n      \n      console.log(\"this is index\")\n      console.log(conversacionUno[i].index)\n      \n      \n    }\n    console.log(numbers)\n    console.log(\"conversacionUno\")\n    console.log(conversacionUno)\n    console.log(\"conversacionUno length\")\n    console.log(conversacionUno.length)\n\n    for (var i=0;i<conversacionUno.length; i++ ) {\n      conversacionDos.pop()\n    }\n    console.log(\"conversacionDos\")\n    console.log(conversacionDos)\n\n    const margin = { left: 30, top: 10, right: 3, bottom: 20 }\n    const xScale = d3.scaleLinear()\n      .range([margin.left, width - margin.right])\n      .domain(d3.extent(conversacionUno.map(d => d.index)))\n    \n\n\n    svg.selectAll('g').remove()\n    \n    svg.append('g')\n      .call(d3.axisBottom(xScale))\n      .attr('transform', `translate(${2*margin.left},${height - 3*margin.bottom})`)\n\n    function getColorDot(d){\n        if (d.DApredict===d.act) {\n          return 'SteelBlue'\n        }\n        \n        return 'red'\n    }\n\n  //   function getColorLine(d){\n  //     console.log(\"topic\")\n  //     console.log(d)\n  //     if (d.topic===100) {\n  //       return 'orange'\n  //     }\n  //     if (d.topic===101) {\n  //       return 'green'\n  //     }\n  //     if (d.topic===102) {\n  //       return 'SteelBlue'\n  //     }\n  //     if (d.topic===103) {\n  //       return 'red'\n  //     }\n  //     if (d.topic===104) {\n  //       return 'yellow'\n  //     }\n  //     if (d.topic===105) {\n  //       return 'brown'\n  //     }\n      \n  //     if (d.topic===106) {\n  //       return 'black'\n  //     }\n  //     return 'red'\n  // }\n\n    const yScale = d3.scaleLinear()\n      .range([height - 5*margin.bottom, 5*margin.top])\n      .domain(d3.extent(conversacionUno.map(d => d.topic)))\n    \n    \n\n    svg.append('g')\n      .call(d3.axisLeft(yScale))\n      .attr('transform', `translate(${2*margin.left},0)`)\n    \n    svg.selectAll('circle')\n      .data(conversacionUno)\n      .enter()\n      .append('circle') \n        .attr('cx', d => xScale(d.index))\n        .attr('cy', d => yScale(d.topic))\n        //.attr('cy', d => d.topic)\n        .attr('r', 4)\n        \n        .style('fill', d => getColorDot(d))\n        //.attr('stroke-width','.05')\n        //.attr('stroke','black')\n        //.attr('stroke-opacity','10')\n        .attr('transform', `translate(${2*margin.left},0)`);\n      \n    \n    const lineSeq = d3.line()\n      .x(d => xScale(d.index))\n      .y(d => yScale(d.topic))\n      .curve(d3.curveStepAfter)\n      //.attr('stroke',d => getColorDot(d))\n      \n    \n    svg.append('g')\n      .selectAll('path')\n      .data([conversacionUno])\n      .enter()\n      .append('path')\n        .attr('transform', `translate(${2*margin.left},0)`)\n        .attr('d', d => lineSeq(d)) \n        .attr('fill', 'none')\n        //these do what?\n        //.attr(\"stroke-linejoin\", \"round\")\n        //.attr(\"stroke-linecap\", \"round\")\n        \n        .attr('stroke','orange')// 'black')\n        //.style('fill', d => getColorDot(d))\n        \n        \n    svg.append('text')\n      .attr('text-anchor', 'middle')\n      .attr('x', width / 2)\n      .attr('y', height )\n      .text('Utterance # within Conversation');\n  \n    svg.append('text')\n      .attr('text-anchor', 'middle')\n      .attr('transform', 'rotate(-90)')\n      .attr('x', -height / 2 + 25)\n      .attr('y',20)\n      .text('Emotions');\n    \n    svg.append('text')\n      .attr('text-anchor', 'middle')\n      //.attr('transform', 'rotate(-90)')\n      .attr('x', width)\n      .attr('y', 15)\n      .attr('fill','red')\n      .attr('stroke-width','.01')\n      .attr('stroke','black')\n      .text('DA PREDICTION ERROR');\n    \n    svg.append('text')\n      .attr('text-anchor', 'middle')\n      //.attr('transform', 'rotate(-90)')\n      .attr('x', width+11)\n      .attr('y', 40)\n      .attr('fill','SteelBlue')\n      .attr('stroke-width','.01')\n      .attr('stroke','black')\n      .text('DA PREDICTION CORRECT');\n    \n    svg.selectAll('.legendRect')\n      .append('rect').attr('class','legendRect')\n      .attr('fill','red')\n      .attr('transform', `translate(${2*margin.left},${height-2*margin.bottom})`)\n\n    //pd\n\n   \n  }, [words],[conversation]);\n\n  return <svg ref={svgRef} width=\"100%\" height={'100%'} style={{'paddingLeft': '2%'}}></svg>;\n};\n\nexport default EmotionSequence;\n\nfunction countNumbers(numbers) {\n  const countDict = {}; // Create an empty dictionary\n\n  for (const number of numbers) {\n    // console.log(\"NUMBER\", number);\n    if (countDict[number[0]] == undefined) {\n      countDict[number[0]] = [1, number[1]]; // If the number is not in the dictionary, initialize the count to 1\n    } else {\n      countDict[number[0]][0] += 1; // If the number is already in the dictionary, increment the count\n    }\n  }\n\n  return countDict;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
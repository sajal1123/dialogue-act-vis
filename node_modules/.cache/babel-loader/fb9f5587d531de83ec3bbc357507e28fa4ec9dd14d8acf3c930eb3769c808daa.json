{"ast":null,"code":"import React,{useEffect,useRef}from'react';import*as d3 from'd3';import'd3-selection';import jsonData from\"../../data/Conv11103.json\";import EDAs from'../../data/daMap';import actNum from'../../data/daLabelsDict';import{jsx as _jsx}from\"react/jsx-runtime\";const Sequence=()=>{let conversation=jsonData;const data=jsonData['0']['Table 1'];const daLabels=data.map(row=>[EDAs[actNum[row['act']-1]],actNum[row['act']-1]]);let words=countNumbers(daLabels);const svgRef=useRef(null);console.log(conversation[0]['Table 1']);//pd\nconst conversacionUno=conversation[0]['Table 1'];useEffect(()=>{const svg=d3.select(svgRef.current);const width=600;const height=320;const radiusScale=d3.scaleSqrt().domain([0,1]).range([0,30]);const padding=3;//pd\n//add an index number to data\nfor(var i=0;i<conversacionUno.length;i++){console.log(conversacionUno.length);console.log(i);console.log(conversacionUno[i].index);console.log(conversacionUno[i].speaker);conversacionUno[i][\"index\"]=i;console.log(\"this is index\");console.log(conversacionUno[i].index);}const margin={left:30,top:10,right:10,bottom:20};const xScale=d3.scaleLinear().range([margin.left,width-margin.right]).domain(d3.extent(conversacionUno.map(d=>d.index)));svg.append('g').call(d3.axisBottom(xScale)).attr('transform',\"translate(\".concat(2*margin.left,\",\").concat(height-3*margin.bottom,\")\"));function getColorDot(d){if(d.DApredict===d.act){return'SteelBlue';}return'red';}const yScale=d3.scaleOrdinal().range([height-5*margin.bottom,5*margin.top]).domain(d3.extent(conversacionUno.map(d=>d.speaker)));svg.append('g').call(d3.axisLeft(yScale)).attr('transform',\"translate(\".concat(2*margin.left,\",0)\"));svg.selectAll('circle').data(conversacionUno).enter().append('circle').attr('cx',d=>xScale(d.index)).attr('cy',d=>yScale(d.speaker)).attr('r',4).style('fill',d=>getColorDot(d)).attr('transform',\"translate(\".concat(2*margin.left,\",0)\"));const lineSeq=d3.line().x(d=>xScale(d.index)).y(d=>yScale(d.speaker));svg.append('g').selectAll('path').data([conversacionUno]).enter().append('path').attr('transform',\"translate(\".concat(2*margin.left,\",0)\")).attr('d',d=>lineSeq(d)).attr('fill','none').attr('stroke','black');svg.append('text').attr('text-anchor','middle').attr('x',width/2).attr('y',height-margin.bottom).text('Utterance # within Conversation');svg.append('text').attr('text-anchor','middle').attr('transform','rotate(-90)').attr('x',-height/2).attr('y',30).text('Sentiment Switches');svg.append('text').attr('text-anchor','middle')//.attr('transform', 'rotate(-90)')\n.attr('x',width).attr('y',15).attr('fill','red').text('INCORRECT DA PREDICTION');svg.append('text').attr('text-anchor','middle')//.attr('transform', 'rotate(-90)')\n.attr('x',width).attr('y',30).attr('fill','steelblue').text('CORRECT DA PREDICTION');svg.selectAll('.legendRect').append('rect').attr('class','legendRect').attr('fill','red').attr('transform',\"translate(\".concat(2*margin.left,\",\").concat(height-2*margin.bottom,\")\"));//pd\n},[words],[conversation]);return/*#__PURE__*/_jsx(\"svg\",{ref:svgRef,width:\"100%\",height:'100%'});};export default Sequence;function countNumbers(numbers){const countDict={};// Create an empty dictionary\nfor(const number of numbers){// console.log(\"NUMBER\", number);\nif(countDict[number[0]]==undefined){countDict[number[0]]=[1,number[1]];// If the number is not in the dictionary, initialize the count to 1\n}else{countDict[number[0]][0]+=1;// If the number is already in the dictionary, increment the count\n}}return countDict;}","map":{"version":3,"names":["React","useEffect","useRef","d3","jsonData","EDAs","actNum","jsx","_jsx","Sequence","conversation","data","daLabels","map","row","words","countNumbers","svgRef","console","log","conversacionUno","svg","select","current","width","height","radiusScale","scaleSqrt","domain","range","padding","i","length","index","speaker","margin","left","top","right","bottom","xScale","scaleLinear","extent","d","append","call","axisBottom","attr","concat","getColorDot","DApredict","act","yScale","scaleOrdinal","axisLeft","selectAll","enter","style","lineSeq","line","x","y","text","ref","numbers","countDict","number","undefined"],"sources":["/Users/sajalchandra/Desktop/UIC/UIC Sem 3/CS 529/Final Project Deployment/dialogue-act-vis/src/components/visualizations/Sequence.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport 'd3-selection';\nimport jsonData from \"../../data/Conv11103.json\"\nimport EDAs from '../../data/daMap';\nimport actNum from '../../data/daLabelsDict';\n\n\nconst   Sequence = () => {\n  let conversation = jsonData;\n  const data = jsonData['0']['Table 1'];\n  const daLabels = data.map(row => ([EDAs[actNum[row['act'] - 1]], actNum[row['act'] - 1]]));\n  let words = countNumbers(daLabels);\n  const svgRef = useRef(null);\n  console.log(conversation[0]['Table 1'])//pd\n  const conversacionUno = conversation[0]['Table 1']\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const width = 600;\n    const height = 320;\n    const radiusScale = d3.scaleSqrt().domain([0, 1]).range([0, 30]);\n    const padding = 3;\n\n    //pd\n    //add an index number to data\n    for (var i = 0; i < conversacionUno.length; i++) {\n      console.log(conversacionUno.length)\n      console.log(i)\n      console.log(conversacionUno[i].index)\n      console.log(conversacionUno[i].speaker)\n      conversacionUno[i][\"index\"] = i\n      console.log(\"this is index\")\n      console.log(conversacionUno[i].index)\n    }\n\n\n    const margin = { left: 30, top: 10, right: 10, bottom: 20 }\n    const xScale = d3.scaleLinear()\n      .range([margin.left, width - margin.right])\n      .domain(d3.extent(conversacionUno.map(d => d.index)))\n\n    svg.append('g')\n      .call(d3.axisBottom(xScale))\n      .attr('transform', `translate(${2 * margin.left},${height - 3 * margin.bottom})`)\n\n    function getColorDot(d) {\n      if (d.DApredict === d.act) {\n        return 'SteelBlue'\n      }\n\n      return 'red'\n    }\n\n    const yScale = d3.scaleOrdinal()\n      .range([height - 5 * margin.bottom, 5 * margin.top])\n      .domain(d3.extent(conversacionUno.map(d => d.speaker)))\n\n    svg.append('g')\n      .call(d3.axisLeft(yScale))\n      .attr('transform', `translate(${2 * margin.left},0)`)\n\n    svg.selectAll('circle')\n      .data(conversacionUno)\n      .enter()\n      .append('circle')\n      .attr('cx', d => xScale(d.index))\n      .attr('cy', d => yScale(d.speaker))\n      .attr('r', 4)\n      .style('fill', d => getColorDot(d))\n      .attr('transform', `translate(${2 * margin.left},0)`);\n\n\n    const lineSeq = d3.line()\n      .x(d => xScale(d.index))\n      .y(d => yScale(d.speaker))\n\n    svg.append('g')\n      .selectAll('path')\n      .data([conversacionUno])\n      .enter()\n      .append('path')\n      .attr('transform', `translate(${2 * margin.left},0)`)\n      .attr('d', d => lineSeq(d))\n      .attr('fill', 'none')\n      .attr('stroke', 'black')\n\n    svg.append('text')\n      .attr('text-anchor', 'middle')\n      .attr('x', width / 2)\n      .attr('y', height - margin.bottom)\n      .text('Utterance # within Conversation');\n\n    svg.append('text')\n      .attr('text-anchor', 'middle')\n      .attr('transform', 'rotate(-90)')\n      .attr('x', -height / 2)\n      .attr('y', 30)\n      .text('Sentiment Switches');\n\n    svg.append('text')\n      .attr('text-anchor', 'middle')\n      //.attr('transform', 'rotate(-90)')\n      .attr('x', width)\n      .attr('y', 15)\n      .attr('fill', 'red')\n      .text('INCORRECT DA PREDICTION');\n    svg.append('text')\n      .attr('text-anchor', 'middle')\n      //.attr('transform', 'rotate(-90)')\n      .attr('x', width)\n      .attr('y', 30)\n      .attr('fill', 'steelblue')\n      .text('CORRECT DA PREDICTION');\n\n    svg.selectAll('.legendRect')\n      .append('rect').attr('class', 'legendRect')\n      .attr('fill', 'red')\n      .attr('transform', `translate(${2 * margin.left},${height - 2 * margin.bottom})`)\n\n    //pd\n\n\n  }, [words], [conversation]);\n\n  return <svg ref={svgRef}  width=\"100%\" height={'100%'}></svg>;\n};\n\nexport default Sequence;\n\nfunction countNumbers(numbers) {\n  const countDict = {}; // Create an empty dictionary\n\n  for (const number of numbers) {\n    // console.log(\"NUMBER\", number);\n    if (countDict[number[0]] == undefined) {\n      countDict[number[0]] = [1, number[1]]; // If the number is not in the dictionary, initialize the count to 1\n    } else {\n      countDict[number[0]][0] += 1; // If the number is already in the dictionary, increment the count\n    }\n  }\n\n  return countDict;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
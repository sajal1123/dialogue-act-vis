{"ast":null,"code":"import React,{useEffect,useState}from'react';import Panel from'../components/core/Panel';import PanelContainer from'../components/core/PanelContainer';import ConversationVisualization from'../components/visualizations/DialogueComponent';import WordCloud from'../components/visualizations/wordCloud';import EmotionSankeyPlot from'../components/visualizations/TopEmotions/EmotionSankeyPlot';import Sequence from'../components/visualizations/Sequence';import EmotionSwitchSequence from'../components/visualizations/EmotionSwitchSequence';import EmotionSankeyFooter from'../components/visualizations/TopEmotions/EmotionSankeyFooter';import EmotionSequence from'../components/visualizations/EmotionSequence';import SequenceFooter from'../components/visualizations/SequenceFooter';import WordCloudFooter from'../components/visualizations/WordCloudFooter';import convestations from\"../data/Randomcsvjson.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";let row1=[];let row2=[];function Tab1(props){const[convID,setConvId]=useState(10010);const[data,setData]=useState(null);const convIDs=Array.from(new Set(convestations[0]['Table 1'].map(conv=>conv.conv_id)));let rows=getData(convID);useEffect(()=>{rows=getData(convID);},[convID]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"conversationId\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"Conversation ID:\"})}),/*#__PURE__*/_jsx(\"select\",{id:\"conversationId\",onChange:e=>{handleConvIDChange(setConvId,parseInt(e.target.value));},value:convID,style:{width:'100px',fontSize:'16px',padding:'8px',// Add padding for better appearance\npaddingTop:'10px',borderRadius:'5px',// Add rounded corners\nborder:'1px solid #ccc'// Add a border\n},children:convIDs.map((id,idx)=>/*#__PURE__*/_jsx(\"option\",{value:id,children:id},idx))}),rows[0]&&rows[1]?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PanelContainer,{panels:rows[0]}),/*#__PURE__*/_jsx(PanelContainer,{panels:rows[1]})]}):null]});}export default Tab1;const handleConvIDChange=(func,data)=>{func(data);};const getData=convID=>{let temp=convestations[0]['Table 1'].filter(conv=>conv.conv_id===convID);row1=[/*#__PURE__*/_jsx(Panel,{title:\"Conversations\",bgColor:\"#ffffff\",visulization:/*#__PURE__*/_jsx(ConversationVisualization,{data:temp}),flex:0.65}),/*#__PURE__*/_jsx(Panel,{title:\"Dialogue Act Prevalence\",bgColor:\"#ffffff\",footer:/*#__PURE__*/_jsx(WordCloudFooter,{}),visulization:/*#__PURE__*/_jsx(WordCloud,{data:temp}),flex:0.35})];row2=[/*#__PURE__*/_jsx(Panel,{title:\"Emotion / Dialogue Act association\",footer:/*#__PURE__*/_jsx(EmotionSankeyFooter,{}),bgColor:\"#ffffff\",visulization:/*#__PURE__*/_jsx(EmotionSankeyPlot,{data:temp}),flex:0.35}),/*#__PURE__*/_jsx(Panel,{title:\"DA Prediction and Sentiment, Emotion Changes\",bgColor:\"#ffffff\",footer:/*#__PURE__*/_jsx(SequenceFooter,{}),visulization:/*#__PURE__*/_jsx(EmotionSwitchSequence,{data:temp}),flex:0.65,visHeight:'calc(100% - 2em)'})];return[row1,row2];};","map":{"version":3,"names":["React","useEffect","useState","Panel","PanelContainer","ConversationVisualization","WordCloud","EmotionSankeyPlot","Sequence","EmotionSwitchSequence","EmotionSankeyFooter","EmotionSequence","SequenceFooter","WordCloudFooter","convestations","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","row1","row2","Tab1","props","convID","setConvId","data","setData","convIDs","Array","from","Set","map","conv","conv_id","rows","getData","children","htmlFor","id","onChange","e","handleConvIDChange","parseInt","target","value","style","width","fontSize","padding","paddingTop","borderRadius","border","idx","panels","func","temp","filter","title","bgColor","visulization","flex","footer","visHeight"],"sources":["/Users/sajalchandra/Desktop/UIC/UIC Sem 3/CS 529/Final Project Deployment/dialogue-act-vis/src/tabs/Tab1.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Panel from '../components/core/Panel';\nimport PanelContainer from '../components/core/PanelContainer';\nimport ConversationVisualization from '../components/visualizations/DialogueComponent';\nimport WordCloud from '../components/visualizations/wordCloud';\nimport EmotionSankeyPlot from '../components/visualizations/TopEmotions/EmotionSankeyPlot';\nimport Sequence from '../components/visualizations/Sequence';\nimport EmotionSwitchSequence from '../components/visualizations/EmotionSwitchSequence';\nimport EmotionSankeyFooter from '../components/visualizations/TopEmotions/EmotionSankeyFooter';\nimport EmotionSequence from '../components/visualizations/EmotionSequence';\nimport SequenceFooter from '../components/visualizations/SequenceFooter';\nimport WordCloudFooter from '../components/visualizations/WordCloudFooter';\nimport convestations from \"../data/Randomcsvjson.json\";\n\nlet row1 = []\nlet row2 = []\nfunction Tab1(props) {\n  const [convID, setConvId] = useState(10010)\n  const [data, setData] = useState(null)\n  const convIDs = Array.from(new Set(convestations[0]['Table 1'].map((conv) => conv.conv_id)))\n  let rows = getData(convID)\n  \n  useEffect(() => {\n    rows = getData(convID)\n  }, [convID])\n  return (\n    <>\n      <label htmlFor=\"conversationId\"><strong>Conversation ID:</strong></label>\n      <select\n        id=\"conversationId\"\n        onChange={(e) => {\n          handleConvIDChange(setConvId, parseInt(e.target.value));\n        }}\n        value={convID}\n        style={{\n          width: '100px',\n          fontSize: '16px',\n          padding: '8px',  // Add padding for better appearance\n          paddingTop: '10px',\n          borderRadius: '5px',  // Add rounded corners\n          border: '1px solid #ccc',  // Add a border\n        }}\n      >\n        {convIDs.map((id, idx) => (\n          <option key={idx} value={id}>\n            {id}\n          </option>\n        ))}\n      </select>\n      {rows[0] && rows[1] ? (\n        <>\n          <PanelContainer panels={rows[0]} />\n          <PanelContainer panels={rows[1]} />\n        </>\n      ) : null}\n    </>\n  );\n  \n}\n\nexport default Tab1;\n\nconst handleConvIDChange = (func, data) => {\n  func(data)\n}\n\nconst getData = (convID) => {\n  let temp = convestations[0]['Table 1'].filter((conv) => conv.conv_id === convID)\n  row1 = [\n        <Panel title={\"Conversations\"} bgColor={\"#ffffff\"} visulization={<ConversationVisualization data={temp}/>} flex={0.65} />,\n        <Panel title={\"Dialogue Act Prevalence\"} bgColor={\"#ffffff\"} footer={<WordCloudFooter />} visulization={<WordCloud data={temp}/>} flex={0.35} />\n  ]\n  row2 = [\n        <Panel title={\"Emotion / Dialogue Act association\"} footer={<EmotionSankeyFooter/>} bgColor={\"#ffffff\"} visulization={<EmotionSankeyPlot data={temp}/>} flex={0.35} />,\n        <Panel title={\"DA Prediction and Sentiment, Emotion Changes\"} bgColor={\"#ffffff\"} footer={<SequenceFooter />} visulization={<EmotionSwitchSequence data={temp}/>} flex={0.65} visHeight={'calc(100% - 2em)'} />\n  ]\n  \n  return [row1, row2]\n} "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useEffect,useState,useLayoutEffect}from'react';import*as d3 from'd3';export default function useSVGCanvas(d3Container){//takes a ref to a container, makes an svg over it, and returns the svg selection, size ,and a tooltip\nconst[windowHeight,windowWidth]=useWindowSize();const[height,setHeight]=useState(0);const[width,setWidth]=useState(0);const[svg,setSvg]=useState();const[tTip,setTTip]=useState();useEffect(function makeSvg(){if(d3Container.current){d3.select(d3Container.current).selectAll('svg').remove();var h=d3Container.current.clientHeight;var w=d3Container.current.clientWidth;var canvas=d3.select(d3Container.current).append('svg').attr('class','frameEntryD3')// .attr('viewbox',[0,0,width,height])\n.attr('width',w).attr('height',h);if(d3.select('body').select('.tooltip').empty()){d3.select('body').append('div').attr('class','tooltip').style('visibility','hidden');}var tip=d3.select('body').select('.tooltip');setHeight(h);setWidth(w);setSvg(canvas);setTTip(tip);}},[d3Container.current,windowWidth,windowHeight]);return[svg,height,width,tTip];}function useWindowSize(){const[size,setSize]=useState([0,0]);useLayoutEffect(()=>{function updateSize(){setSize([window.innerWidth,window.innerHeight]);}window.addEventListener('resize',updateSize);updateSize();return()=>window.removeEventListener('resize',updateSize);},[]);return size;}","map":{"version":3,"names":["React","useEffect","useState","useLayoutEffect","d3","useSVGCanvas","d3Container","windowHeight","windowWidth","useWindowSize","height","setHeight","width","setWidth","svg","setSvg","tTip","setTTip","makeSvg","current","select","selectAll","remove","h","clientHeight","w","clientWidth","canvas","append","attr","empty","style","tip","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"sources":["/Users/sajalchandra/Desktop/UIC/UIC Sem 3/CS 529/Final Project Deployment/dialogue-act-vis/src/components/core/useSVGCanvas.js"],"sourcesContent":["import React, { useEffect, useState, useLayoutEffect } from 'react';\nimport * as d3 from 'd3';\n\nexport default function useSVGCanvas(d3Container){\n    //takes a ref to a container, makes an svg over it, and returns the svg selection, size ,and a tooltip\n    const [windowHeight, windowWidth] = useWindowSize();\n    const [height, setHeight] = useState(0);\n    const [width, setWidth] = useState(0);\n    const [svg, setSvg] = useState();\n    const [tTip, setTTip] = useState();\n\n\n    useEffect(function makeSvg(){\n        if(d3Container.current){\n            \n            d3.select(d3Container.current).selectAll('svg').remove();\n\n            var h = d3Container.current.clientHeight;\n            var w = d3Container.current.clientWidth;\n\n            var canvas = d3.select(d3Container.current)\n                .append('svg')\n                .attr('class','frameEntryD3')\n                // .attr('viewbox',[0,0,width,height])\n                .attr('width',w)\n                .attr('height',h);\n\n            if(d3.select('body').select('.tooltip').empty()){\n                d3.select('body').append('div')\n                    .attr('class','tooltip')\n                    .style('visibility','hidden');\n            }\n            var tip = d3.select('body').select('.tooltip');\n\n            setHeight(h);\n            setWidth(w);\n            setSvg(canvas);\n            setTTip(tip);\n        }\n    },[d3Container.current,windowWidth, windowHeight]);\n\n    return [svg, height, width, tTip]\n}\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n      }\n      window.addEventListener('resize', updateSize);\n      updateSize();\n      return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n  }"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,eAAe,KAAQ,OAAO,CACnE,MAAO,GAAK,CAAAC,EAAE,KAAM,IAAI,CAExB,cAAe,SAAS,CAAAC,YAAYA,CAACC,WAAW,CAAC,CAC7C;AACA,KAAM,CAACC,YAAY,CAAEC,WAAW,CAAC,CAAGC,aAAa,CAAC,CAAC,CACnD,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CACvC,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAACY,GAAG,CAAEC,MAAM,CAAC,CAAGb,QAAQ,CAAC,CAAC,CAChC,KAAM,CAACc,IAAI,CAAEC,OAAO,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAGlCD,SAAS,CAAC,QAAS,CAAAiB,OAAOA,CAAA,CAAE,CACxB,GAAGZ,WAAW,CAACa,OAAO,CAAC,CAEnBf,EAAE,CAACgB,MAAM,CAACd,WAAW,CAACa,OAAO,CAAC,CAACE,SAAS,CAAC,KAAK,CAAC,CAACC,MAAM,CAAC,CAAC,CAExD,GAAI,CAAAC,CAAC,CAAGjB,WAAW,CAACa,OAAO,CAACK,YAAY,CACxC,GAAI,CAAAC,CAAC,CAAGnB,WAAW,CAACa,OAAO,CAACO,WAAW,CAEvC,GAAI,CAAAC,MAAM,CAAGvB,EAAE,CAACgB,MAAM,CAACd,WAAW,CAACa,OAAO,CAAC,CACtCS,MAAM,CAAC,KAAK,CAAC,CACbC,IAAI,CAAC,OAAO,CAAC,cAAc,CAC5B;AAAA,CACCA,IAAI,CAAC,OAAO,CAACJ,CAAC,CAAC,CACfI,IAAI,CAAC,QAAQ,CAACN,CAAC,CAAC,CAErB,GAAGnB,EAAE,CAACgB,MAAM,CAAC,MAAM,CAAC,CAACA,MAAM,CAAC,UAAU,CAAC,CAACU,KAAK,CAAC,CAAC,CAAC,CAC5C1B,EAAE,CAACgB,MAAM,CAAC,MAAM,CAAC,CAACQ,MAAM,CAAC,KAAK,CAAC,CAC1BC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CACvBE,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CACrC,CACA,GAAI,CAAAC,GAAG,CAAG5B,EAAE,CAACgB,MAAM,CAAC,MAAM,CAAC,CAACA,MAAM,CAAC,UAAU,CAAC,CAE9CT,SAAS,CAACY,CAAC,CAAC,CACZV,QAAQ,CAACY,CAAC,CAAC,CACXV,MAAM,CAACY,MAAM,CAAC,CACdV,OAAO,CAACe,GAAG,CAAC,CAChB,CACJ,CAAC,CAAC,CAAC1B,WAAW,CAACa,OAAO,CAACX,WAAW,CAAED,YAAY,CAAC,CAAC,CAElD,MAAO,CAACO,GAAG,CAAEJ,MAAM,CAAEE,KAAK,CAAEI,IAAI,CAAC,CACrC,CAEA,QAAS,CAAAP,aAAaA,CAAA,CAAG,CACrB,KAAM,CAACwB,IAAI,CAAEC,OAAO,CAAC,CAAGhC,QAAQ,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACxCC,eAAe,CAAC,IAAM,CACpB,QAAS,CAAAgC,UAAUA,CAAA,CAAG,CACpBD,OAAO,CAAC,CAACE,MAAM,CAACC,UAAU,CAAED,MAAM,CAACE,WAAW,CAAC,CAAC,CAClD,CACAF,MAAM,CAACG,gBAAgB,CAAC,QAAQ,CAAEJ,UAAU,CAAC,CAC7CA,UAAU,CAAC,CAAC,CACZ,MAAO,IAAMC,MAAM,CAACI,mBAAmB,CAAC,QAAQ,CAAEL,UAAU,CAAC,CAC/D,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,CAAAF,IAAI,CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}